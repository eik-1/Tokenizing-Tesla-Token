{
  "transactions": [
    {
      "hash": "0x5ce39af3882550d199f164e6326b11723557b1c2b9442d4fc365f84f2e26c931",
      "transactionType": "CREATE",
      "contractName": "dTsla",
      "contractAddress": "0xb02e529935f1108e4cd7105ea93f5336be34a9bb",
      "function": null,
      "arguments": [
        "\"if (secrets.alpacaKey == \\\"\\\" || secrets.alapacaSecret == \\\"\\\") {\\n  throw new Error(\\\"Alpaca API key and secret not set.\\\");\\n}\\n\\nconst alpacaRequest = Functions.makeHttpRequest({\\n  url: \\\"https://paper-api.alpaca.markets/v2/account\\\",\\n  headers: {\\n    accept: \\\"application/json\\\",\\n    \\\"APCA-API-KEY-ID\\\": secrets.alpacaKey,\\n    \\\"APCA-API-SECRET-KEY\\\": secrets.alpacaSecret,\\n  },\\n});\\n\\nconst [response] = await Promise.all([alpacaRequest]);\\n\\nconst portfolioBalance = response.data.portfolio_value;\\nconsole.log(`Alpaca Portfolio Balance: $${portfolioBalance}`);\\n\\nreturn Functions.encodeUint256(\\n  Math.round(portfolioBalance * 1000000000000000000)\\n);\\n\"",
        "194",
        "\"// What does this script do?\\n// 1. Sells TSLA on alpaca for USD\\n// 2. Buys USDC -> with USD\\n// 3. Sends USDC -> contract for withdrawl\\n\\n// Return 0 on unsuccessful sell\\n\\nconst ASSET_TICKER = \\\"TSLA\\\";\\nconst CRYPTO_TICKER = \\\"USDCUSD\\\";\\n// TODO\\nconst RWA_CONTRACT = \\\"0x7358D4CDF1c468aA018ec41ddD98b44879a10962\\\";\\nconst SLEEP_TIME = 5000; // 5 seconds\\n\\nasync function main() {\\n  const amountTsla = args[0];\\n  const amountUsdc = args[1];\\n  _checkKeys();\\n\\n  /*//////////////////////////////////////////////////////////////\\n                           SELL TSLA FOR USD\\n    //////////////////////////////////////////////////////////////*/\\n  let side = \\\"sell\\\";\\n  let [client_order_id, orderStatus, responseStatus] = await placeOrder(\\n    ASSET_TICKER,\\n    amountTsla,\\n    side\\n  );\\n  if (responseStatus !== 200) {\\n    return Functions.encodeUint256(0);\\n  }\\n  if (orderStatus !== \\\"accepted\\\") {\\n    return Functions.encodeUint256(0);\\n  }\\n\\n  let filled = await waitForOrderToFill(client_order_id);\\n  if (!filled) {\\n    // @audit, if this fails... That's probably an issue\\n    await cancelOrder(client_order_id);\\n    return Functions.encodeUint256(0);\\n  }\\n\\n  /*//////////////////////////////////////////////////////////////\\n                           BUY USDC WITH USD\\n    //////////////////////////////////////////////////////////////*/\\n  side = \\\"buy\\\";\\n  [client_order_id, orderStatus, responseStatus] = await placeOrder(\\n    CRYPTO_TICKER,\\n    amountTsla,\\n    side\\n  );\\n  if (responseStatus !== 200) {\\n    return Functions.encodeUint256(0);\\n  }\\n  if (orderStatus !== \\\"accepted\\\") {\\n    return Functions.encodeUint256(0);\\n  }\\n  filled = await waitForOrderToFill(client_order_id);\\n  if (!filled) {\\n    // @audit, if this fails... That's probably an issue\\n    await cancelOrder(client_order_id);\\n    return Functions.encodeUint256(0);\\n  }\\n\\n  /*//////////////////////////////////////////////////////////////\\n                         SEND USDC TO CONTRACT\\n    //////////////////////////////////////////////////////////////*/\\n  const transferId = await sendUsdcToContract(amountUsdc);\\n  if (transferId === null) {\\n    return Functions.encodeUint256(0);\\n  }\\n\\n  const completed = await waitForCryptoTransferToComplete(transferId);\\n  if (!completed) {\\n    return Functions.encodeUint256(0);\\n  }\\n  return Functions.encodeUint256(amountUsdc);\\n}\\n\\n// returns string: client_order_id, string: orderStatus, int: responseStatus\\nasync function placeOrder(symbol, qty, side) {\\n  // TODO, something is wrong with this request, need to fix\\n  const alpacaSellRequest = Functions.makeHttpRequest({\\n    method: \\\"POST\\\",\\n    url: \\\"https://paper-api.alpaca.markets/v2/orders\\\",\\n    headers: {\\n      accept: \\\"application/json\\\",\\n      \\\"content-type\\\": \\\"application/json\\\",\\n      \\\"APCA-API-KEY-ID\\\": secrets.alpacaKey,\\n      \\\"APCA-API-SECRET-KEY\\\": secrets.alpacaSecret,\\n    },\\n    data: {\\n      side: side,\\n      type: \\\"market\\\",\\n      time_in_force: \\\"gtc\\\",\\n      symbol: symbol,\\n      qty: qty,\\n    },\\n  });\\n\\n  const [response] = await Promise.all([alpacaSellRequest]);\\n  const responseStatus = response.status;\\n  console.log(`\\\\nResponse status: ${responseStatus}\\\\n`);\\n  console.log(response);\\n  console.log(`\\\\n`);\\n\\n  const { client_order_id, status: orderStatus } = response.data;\\n  return client_order_id, orderStatus, responseStatus;\\n}\\n\\n// returns int: responseStatus\\nasync function cancelOrder(client_order_id) {\\n  const alpacaCancelRequest = Functions.makeHttpRequest({\\n    method: \\\"DELETE\\\",\\n    url: `https://paper-api.alpaca.markets/v2/orders/${client_order_id}`,\\n    headers: {\\n      accept: \\\"application/json\\\",\\n      \\\"APCA-API-KEY-ID\\\": secrets.alpacaKey,\\n      \\\"APCA-API-SECRET-KEY\\\": secrets.alpacaSecret,\\n    },\\n  });\\n\\n  const [response] = await Promise.all([alpacaCancelRequest]);\\n\\n  const responseStatus = response.status;\\n  return responseStatus;\\n}\\n\\n// @returns bool\\nasync function waitForOrderToFill(client_order_id) {\\n  let numberOfSleeps = 0;\\n  const capNumberOfSleeps = 10;\\n  let filled = false;\\n\\n  while (numberOfSleeps < capNumberOfSleeps) {\\n    const alpacaOrderStatusRequest = Functions.makeHttpRequest({\\n      method: \\\"GET\\\",\\n      url: `https://paper-api.alpaca.markets/v2/orders/${client_order_id}`,\\n      headers: {\\n        accept: \\\"application/json\\\",\\n        \\\"APCA-API-KEY-ID\\\": secrets.alpacaKey,\\n        \\\"APCA-API-SECRET-KEY\\\": secrets.alpacaSecret,\\n      },\\n    });\\n\\n    const [response] = await Promise.all([alpacaOrderStatusRequest]);\\n\\n    const responseStatus = response.status;\\n    const { status: orderStatus } = response.data;\\n    if (responseStatus !== 200) {\\n      return false;\\n    }\\n    if (orderStatus === \\\"filled\\\") {\\n      filled = true;\\n      break;\\n    }\\n    numberOfSleeps++;\\n    await sleep(SLEEP_TIME);\\n  }\\n  return filled;\\n}\\n\\n// returns string: transferId\\nasync function sendUsdcToContract(usdcAmount) {\\n  const transferRequest = Functions.makeHttpRequest({\\n    method: \\\"POST\\\",\\n    url: \\\"https://paper-api.alpaca.markets/v2/wallets/transfers\\\",\\n    headers: {\\n      accept: \\\"application/json\\\",\\n      \\\"content-type\\\": \\\"application/json\\\",\\n      \\\"APCA-API-KEY-ID\\\": secrets.alpacaKey,\\n      \\\"APCA-API-SECRET-KEY\\\": secrets.alpacaSecret,\\n    },\\n    data: {\\n      amount: usdcAmount,\\n      address: RWA_CONTRACT,\\n      asset: CRYPTO_TICKER,\\n    },\\n  });\\n\\n  const [response] = await Promise.all([transferRequest]);\\n  if (response.status !== 200) {\\n    return null;\\n  }\\n  return response.data.id;\\n}\\n\\nasync function waitForCryptoTransferToComplete(transferId) {\\n  let numberOfSleeps = 0;\\n  const capNumberOfSleeps = 120; // 120 * 5 seconds = 10 minutes\\n  let completed = false;\\n\\n  while (numberOfSleeps < capNumberOfSleeps) {\\n    const alpacaTransferStatusRequest = Functions.makeHttpRequest({\\n      method: \\\"GET\\\",\\n      url: `https://paper-api.alpaca.markets/v2/wallets/transfers/${transferId}`,\\n      headers: {\\n        accept: \\\"application/json\\\",\\n        \\\"APCA-API-KEY-ID\\\": secrets.alpacaKey,\\n        \\\"APCA-API-SECRET-KEY\\\": secrets.alpacaSecret,\\n      },\\n    });\\n\\n    const [response] = await Promise.all([alpacaTransferStatusRequest]);\\n\\n    const responseStatus = response.status;\\n    // @audit, the transfer could complete, but the response could be 400\\n    const { status: transferStatus } = response.data;\\n    if (responseStatus !== 200) {\\n      return false;\\n    }\\n    if (transferStatus === \\\"completed\\\") {\\n      completed = true;\\n      break;\\n    }\\n    numberOfSleeps++;\\n    await sleep(SLEEP_TIME);\\n  }\\n  return completed;\\n}\\n\\nfunction _checkKeys() {\\n  if (secrets.alpacaKey == \\\"\\\" || secrets.alpacaSecret === \\\"\\\") {\\n    throw Error(\\\"need alpaca keys\\\");\\n  }\\n}\\n\\nfunction sleep(ms) {\\n  return new Promise((resolve) => setTimeout(resolve, ms));\\n}\\n\\nconst result = await main();\\nreturn result;\\n\""
      ],
      "transaction": {
        "from": "0xdb035c42e12ee11f1d47797954c25ee36c3dc77c",
        "gas": "0x917d01",
        "value": "0x0",
        "input": "",
        "nonce": "0xd",
        "chainId": "0x13882"
      },
      "additionalContracts": [],
      "isFixedGasLimit": false
    }
  ],
  "receipts": [
    {
      "status": "0x1",
      "cumulativeGasUsed": "0x73939f",
      "logs": [
        {
          "address": "0x0000000000000000000000000000000000001010",
          "topics": [
            "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
            "0x0000000000000000000000000000000000000000000000000000000000001010",
            "0x000000000000000000000000db035c42e12ee11f1d47797954c25ee36c3dc77c",
            "0x0000000000000000000000006dc2dd54f24979ec26212794c71afefed722280c"
          ],
          "data": "0x000000000000000000000000000000000000000000000000001caac1d95c190000000000000000000000000000000000000000000000000008e4543a833ff9bb00000000000000000000000000000000000000000000019d21a1da74190c1c6a00000000000000000000000000000000000000000000000008c7a978a9e3e0bb00000000000000000000000000000000000000000000019d21be8535f268356a",
          "blockHash": "0x7a23fa8588e14800597d0f04432b9d49856463cda7c7573a57ed8a49cd0b1f4a",
          "blockNumber": "0x6c0180",
          "transactionHash": "0x5ce39af3882550d199f164e6326b11723557b1c2b9442d4fc365f84f2e26c931",
          "transactionIndex": "0x2",
          "logIndex": "0x6",
          "removed": false
        }
      ],
      "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000008000000000000000000000000020000000000000000000000000000000800000000000000000000100080000000000000000000000000000000000000000000000000000000080000000000000020000000000000000000000000040000000000000000000000000000000000000200008000000000000000000000000000000000000000000000000000000004000000000000000000001000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000100000",
      "type": "0x2",
      "transactionHash": "0x5ce39af3882550d199f164e6326b11723557b1c2b9442d4fc365f84f2e26c931",
      "transactionIndex": "0x2",
      "blockHash": "0x7a23fa8588e14800597d0f04432b9d49856463cda7c7573a57ed8a49cd0b1f4a",
      "blockNumber": "0x6c0180",
      "gasUsed": "0x6fee4b",
      "effectiveGasPrice": "0x4190ab0f",
      "from": "0xdb035c42e12ee11f1d47797954c25ee36c3dc77c",
      "to": null,
      "contractAddress": "0xb02e529935f1108e4cd7105ea93f5336be34a9bb"
    }
  ],
  "libraries": [],
  "pending": [],
  "returns": {},
  "timestamp": 1715784453,
  "chain": 80002,
  "commit": "65aa332"
}