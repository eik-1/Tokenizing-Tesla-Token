{
  "transactions": [
    {
      "hash": "0xc7a94bd7beaaecd477e307855fe46e65f5c618479a2f20aaeefa0bb9339fca99",
      "transactionType": "CREATE",
      "contractName": "dTsla",
      "contractAddress": "0x6b5335df55a1729ee5c34a74e33bcfa5b34bdc27",
      "function": null,
      "arguments": [
        "\"if (secrets.alpacaKey == \\\"\\\" || secrets.alapacaSecret == \\\"\\\") {\\n  throw new Error(\\\"Alpaca API key and secret not set.\\\");\\n}\\n\\nconst alpacaRequest = Functions.makeHttpRequest({\\n  url: \\\"https://paper-api.alpaca.markets/v2/account\\\",\\n  headers: {\\n    accept: \\\"application/json\\\",\\n    \\\"APCA-API-KEY-ID\\\": secrets.alpacaKey,\\n    \\\"APCA-API-SECRET-KEY\\\": secrets.alpacaSecret,\\n  },\\n});\\n\\nconst [response] = await Promise.all([alpacaRequest]);\\n\\nconst portfolioBalance = response.data.portfolio_value;\\nconsole.log(`Alpaca Portfolio Balance: $${portfolioBalance}`);\\n\\nreturn Functions.encodeUint256(Math.round(portfolioBalance * 100));\\n\"",
        "194",
        "\"// What does this script do?\\n// 1. Sells TSLA on alpaca for USD\\n// 2. Buys USDC -> with USD\\n// 3. Sends USDC -> contract for withdrawl\\n\\n// Return 0 on unsuccessful sell\\n\\nconst ASSET_TICKER = \\\"TSLA\\\";\\nconst CRYPTO_TICKER = \\\"USDCUSD\\\";\\n// TODO\\nconst RWA_CONTRACT = \\\"0x7358D4CDF1c468aA018ec41ddD98b44879a10962\\\";\\nconst SLEEP_TIME = 5000; // 5 seconds\\n\\nasync function main() {\\n  const amountTsla = args[0];\\n  const amountUsdc = args[1];\\n  _checkKeys();\\n\\n  /*//////////////////////////////////////////////////////////////\\n                           SELL TSLA FOR USD\\n    //////////////////////////////////////////////////////////////*/\\n  let side = \\\"sell\\\";\\n  let [client_order_id, orderStatus, responseStatus] = await placeOrder(\\n    ASSET_TICKER,\\n    amountTsla,\\n    side\\n  );\\n  if (responseStatus !== 200) {\\n    return Functions.encodeUint256(0);\\n  }\\n  if (orderStatus !== \\\"accepted\\\") {\\n    return Functions.encodeUint256(0);\\n  }\\n\\n  let filled = await waitForOrderToFill(client_order_id);\\n  if (!filled) {\\n    // @audit, if this fails... That's probably an issue\\n    await cancelOrder(client_order_id);\\n    return Functions.encodeUint256(0);\\n  }\\n\\n  /*//////////////////////////////////////////////////////////////\\n                           BUY USDC WITH USD\\n    //////////////////////////////////////////////////////////////*/\\n  side = \\\"buy\\\";\\n  [client_order_id, orderStatus, responseStatus] = await placeOrder(\\n    CRYPTO_TICKER,\\n    amountTsla,\\n    side\\n  );\\n  if (responseStatus !== 200) {\\n    return Functions.encodeUint256(0);\\n  }\\n  if (orderStatus !== \\\"accepted\\\") {\\n    return Functions.encodeUint256(0);\\n  }\\n  filled = await waitForOrderToFill(client_order_id);\\n  if (!filled) {\\n    // @audit, if this fails... That's probably an issue\\n    await cancelOrder(client_order_id);\\n    return Functions.encodeUint256(0);\\n  }\\n\\n  /*//////////////////////////////////////////////////////////////\\n                         SEND USDC TO CONTRACT\\n    //////////////////////////////////////////////////////////////*/\\n  const transferId = await sendUsdcToContract(amountUsdc);\\n  if (transferId === null) {\\n    return Functions.encodeUint256(0);\\n  }\\n\\n  const completed = await waitForCryptoTransferToComplete(transferId);\\n  if (!completed) {\\n    return Functions.encodeUint256(0);\\n  }\\n  return Functions.encodeUint256(amountUsdc);\\n}\\n\\n// returns string: client_order_id, string: orderStatus, int: responseStatus\\nasync function placeOrder(symbol, qty, side) {\\n  // TODO, something is wrong with this request, need to fix\\n  const alpacaSellRequest = Functions.makeHttpRequest({\\n    method: \\\"POST\\\",\\n    url: \\\"https://paper-api.alpaca.markets/v2/orders\\\",\\n    headers: {\\n      accept: \\\"application/json\\\",\\n      \\\"content-type\\\": \\\"application/json\\\",\\n      \\\"APCA-API-KEY-ID\\\": secrets.alpacaKey,\\n      \\\"APCA-API-SECRET-KEY\\\": secrets.alpacaSecret,\\n    },\\n    data: {\\n      side: side,\\n      type: \\\"market\\\",\\n      time_in_force: \\\"gtc\\\",\\n      symbol: symbol,\\n      qty: qty,\\n    },\\n  });\\n\\n  const [response] = await Promise.all([alpacaSellRequest]);\\n  const responseStatus = response.status;\\n  console.log(`\\\\nResponse status: ${responseStatus}\\\\n`);\\n  console.log(response);\\n  console.log(`\\\\n`);\\n\\n  const { client_order_id, status: orderStatus } = response.data;\\n  return client_order_id, orderStatus, responseStatus;\\n}\\n\\n// returns int: responseStatus\\nasync function cancelOrder(client_order_id) {\\n  const alpacaCancelRequest = Functions.makeHttpRequest({\\n    method: \\\"DELETE\\\",\\n    url: `https://paper-api.alpaca.markets/v2/orders/${client_order_id}`,\\n    headers: {\\n      accept: \\\"application/json\\\",\\n      \\\"APCA-API-KEY-ID\\\": secrets.alpacaKey,\\n      \\\"APCA-API-SECRET-KEY\\\": secrets.alpacaSecret,\\n    },\\n  });\\n\\n  const [response] = await Promise.all([alpacaCancelRequest]);\\n\\n  const responseStatus = response.status;\\n  return responseStatus;\\n}\\n\\n// @returns bool\\nasync function waitForOrderToFill(client_order_id) {\\n  let numberOfSleeps = 0;\\n  const capNumberOfSleeps = 10;\\n  let filled = false;\\n\\n  while (numberOfSleeps < capNumberOfSleeps) {\\n    const alpacaOrderStatusRequest = Functions.makeHttpRequest({\\n      method: \\\"GET\\\",\\n      url: `https://paper-api.alpaca.markets/v2/orders/${client_order_id}`,\\n      headers: {\\n        accept: \\\"application/json\\\",\\n        \\\"APCA-API-KEY-ID\\\": secrets.alpacaKey,\\n        \\\"APCA-API-SECRET-KEY\\\": secrets.alpacaSecret,\\n      },\\n    });\\n\\n    const [response] = await Promise.all([alpacaOrderStatusRequest]);\\n\\n    const responseStatus = response.status;\\n    const { status: orderStatus } = response.data;\\n    if (responseStatus !== 200) {\\n      return false;\\n    }\\n    if (orderStatus === \\\"filled\\\") {\\n      filled = true;\\n      break;\\n    }\\n    numberOfSleeps++;\\n    await sleep(SLEEP_TIME);\\n  }\\n  return filled;\\n}\\n\\n// returns string: transferId\\nasync function sendUsdcToContract(usdcAmount) {\\n  const transferRequest = Functions.makeHttpRequest({\\n    method: \\\"POST\\\",\\n    url: \\\"https://paper-api.alpaca.markets/v2/wallets/transfers\\\",\\n    headers: {\\n      accept: \\\"application/json\\\",\\n      \\\"content-type\\\": \\\"application/json\\\",\\n      \\\"APCA-API-KEY-ID\\\": secrets.alpacaKey,\\n      \\\"APCA-API-SECRET-KEY\\\": secrets.alpacaSecret,\\n    },\\n    data: {\\n      amount: usdcAmount,\\n      address: RWA_CONTRACT,\\n      asset: CRYPTO_TICKER,\\n    },\\n  });\\n\\n  const [response] = await Promise.all([transferRequest]);\\n  if (response.status !== 200) {\\n    return null;\\n  }\\n  return response.data.id;\\n}\\n\\nasync function waitForCryptoTransferToComplete(transferId) {\\n  let numberOfSleeps = 0;\\n  const capNumberOfSleeps = 120; // 120 * 5 seconds = 10 minutes\\n  let completed = false;\\n\\n  while (numberOfSleeps < capNumberOfSleeps) {\\n    const alpacaTransferStatusRequest = Functions.makeHttpRequest({\\n      method: \\\"GET\\\",\\n      url: `https://paper-api.alpaca.markets/v2/wallets/transfers/${transferId}`,\\n      headers: {\\n        accept: \\\"application/json\\\",\\n        \\\"APCA-API-KEY-ID\\\": secrets.alpacaKey,\\n        \\\"APCA-API-SECRET-KEY\\\": secrets.alpacaSecret,\\n      },\\n    });\\n\\n    const [response] = await Promise.all([alpacaTransferStatusRequest]);\\n\\n    const responseStatus = response.status;\\n    // @audit, the transfer could complete, but the response could be 400\\n    const { status: transferStatus } = response.data;\\n    if (responseStatus !== 200) {\\n      return false;\\n    }\\n    if (transferStatus === \\\"completed\\\") {\\n      completed = true;\\n      break;\\n    }\\n    numberOfSleeps++;\\n    await sleep(SLEEP_TIME);\\n  }\\n  return completed;\\n}\\n\\nfunction _checkKeys() {\\n  if (secrets.alpacaKey == \\\"\\\" || secrets.alpacaSecret === \\\"\\\") {\\n    throw Error(\\\"need alpaca keys\\\");\\n  }\\n}\\n\\nfunction sleep(ms) {\\n  return new Promise((resolve) => setTimeout(resolve, ms));\\n}\\n\\nconst result = await main();\\nreturn result;\\n\""
      ],
      "transaction": {
        "from": "0xdb035c42e12ee11f1d47797954c25ee36c3dc77c",
        "gas": "0x90e0c9",
        "value": "0x0",
        "input": "0x60c060405234801561001057600080fd5b5060405161271738038061271783398101604081905261002f916102ba565b6040805180820182526005808252646454736c6160d81b60208084018290528451808601909552918452908301529073c22a79eba640940abb6df0f7982cc119578e11de33806000816100c95760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156100f9576100f981610153565b5050506001600160a01b0316608052600561011483826103c0565b50600661012182826103c0565b5060079150610132905084826103c0565b50600861013f82826103c0565b50506001600160401b031660a0525061047f565b336001600160a01b038216036101ab5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100c0565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261022357600080fd5b81516001600160401b038082111561023d5761023d6101fc565b604051601f8301601f19908116603f01168101908282118183101715610265576102656101fc565b816040528381526020925086602085880101111561028257600080fd5b600091505b838210156102a45785820183015181830184015290820190610287565b6000602085830101528094505050505092915050565b6000806000606084860312156102cf57600080fd5b83516001600160401b03808211156102e657600080fd5b6102f287838801610212565b945060208601519150808216821461030957600080fd5b60408601519193508082111561031e57600080fd5b5061032b86828701610212565b9150509250925092565b600181811c9082168061034957607f821691505b60208210810361036957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156103bb576000816000526020600020601f850160051c810160208610156103985750805b601f850160051c820191505b818110156103b7578281556001016103a4565b5050505b505050565b81516001600160401b038111156103d9576103d96101fc565b6103ed816103e78454610335565b8461036f565b602080601f831160018114610422576000841561040a5750858301515b600019600386901b1c1916600185901b1785556103b7565b600085815260208120601f198616915b8281101561045157888601518255948401946001909101908401610432565b508582101561046f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a0516122656104b2600039600081816103ea01526108c50152600081816104cb015261113101526122656000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806395d89b41116100f9578063cd377c5311610097578063dd62ed3e11610071578063dd62ed3e14610371578063f2fde38b146103aa578063fb1e61ca146103bd578063fbc6ba6f146103dd57600080fd5b8063cd377c5314610339578063da24a88f14610340578063dafe840b1461034857600080fd5b8063ab134161116100d3578063ab134161146102f8578063abb4719f1461030b578063b0cf4cbb14610313578063c97c77de1461032657600080fd5b806395d89b41146102d5578063a8509fd8146102dd578063a9059cbb146102e557600080fd5b8063313ce5671161016657806370a082311161014057806370a082311461027657806378213aca1461029f57806379ba5097146102b25780638da5cb5b146102ba57600080fd5b8063313ce567146102575780633ccfd60b1461026657806360c426881461026e57600080fd5b806311edc06e116101a257806311edc06e1461021f57806318160ddd14610235578063201f08e91461023d57806323b872dd1461024457600080fd5b806306fdde03146101c9578063095ea7b3146101e75780630ca761751461020a575b600080fd5b6101d1610414565b6040516101de9190611ce5565b60405180910390f35b6101fa6101f5366004611d0f565b6104a6565b60405190151581526020016101de565b61021d610218366004611ddb565b6104c0565b005b610227610544565b6040519081526020016101de565b600454610227565b6064610227565b6101fa610252366004611e47565b6105e0565b604051601281526020016101de565b61021d610604565b6102276106bc565b610227610284366004611e83565b6001600160a01b031660009081526002602052604090205490565b61021d6102ad366004611e9e565b610716565b61021d61099e565b6000546040516001600160a01b0390911681526020016101de565b6101d1610a4d565b600954610227565b6101fa6102f3366004611d0f565b610a5c565b610227610306366004611e9e565b610a6a565b6101d1610b66565b610227610321366004611e9e565b610b75565b610227610334366004611e9e565b610b9c565b60c8610227565b6101d1610baf565b610227610356366004611e83565b6001600160a01b03166000908152600b602052604090205490565b61022761037f366004611eb7565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b61021d6103b8366004611e83565b610bbe565b6103d06103cb366004611e9e565b610bd2565b6040516101de9190611f00565b6040516001600160401b037f00000000000000000000000000000000000000000000000000000000000000001681526020016101de565b60606005805461042390611f4c565b80601f016020809104026020016040519081016040528092919081815260200182805461044f90611f4c565b801561049c5780601f106104715761010080835404028352916020019161049c565b820191906000526020600020905b81548152906001019060200180831161047f57829003601f168201915b5050505050905090565b6000336104b4818585610c64565b60019150505b92915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105095760405163c6829f8360e01b815260040160405180910390fd5b610514838383610c76565b60405183907f85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e690600090a2505050565b60008073c2e2848e28b9fe430ab44f55a8437a33802a219c90506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561059e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c29190611fa0565b5050509150506402540be400816105d99190612006565b9250505090565b6000336105ee858285610cbe565b6105f9858585610d3c565b506001949350505050565b336000818152600b6020526040808220805490839055905163a9059cbb60e01b81526004810193909352602483018190529173b0a10ea7d276b75f73ee9f3a931b2396dfb17b8d9063a9059cbb906044016020604051808303816000875af1158015610674573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610698919061201d565b9050806106b857604051630c8bdbe960e11b815260040160405180910390fd5b5050565b600080731b8739bb4cdf0089d07097a9ae5bd274b29c6f1690506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561059e573d6000803e3d6000fd5b600061072461033483610b75565b905068056bc75e2d631000008110156107505760405163021664cb60e51b815260040160405180910390fd5b6107916040805160e0810190915280600081526020016000815260200160008152602001606081526020016060815260200160608152602001606081525090565b61082e600880546107a190611f4c565b80601f01602080910402602001604051908101604052809291908181526020018280546107cd90611f4c565b801561081a5780601f106107ef5761010080835404028352916020019161081a565b820191906000526020600020905b8154815290600101906020018083116107fd57829003601f168201915b505050505082610d9b90919063ffffffff16565b60408051600280825260608201909252600091816020015b606081526020019060019003908161084657905050905061086684610da8565b816000815181106108795761087961203f565b602002602001018190525061088d83610da8565b816001815181106108a0576108a061203f565b60209081029190910101526108b58282610e3a565b60006109036108c384610e64565b7f0000000000000000000000000000000000000000000000000000000000000000620493e07166756e2d706f6c79676f6e2d616d6f792d3160701b61112c565b604080516060810182528781523360208201529192508101600090526000828152600a60209081526040918290208351815590830151600180830180546001600160a01b039093166001600160a01b031984168117825594860151939490926001600160a81b0319161790600160a01b90849081111561098557610985611eea565b021790555090505061099733866111fe565b5050505050565b6001546001600160a01b031633146109f65760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b60606006805461042390611f4c565b6000336104b4818585610d3c565b6000610a74611234565b610ab56040805160e0810190915280600081526020016000815260200160008152602001606081526020016060815260200160608152602001606081525090565b610ac5600780546107a190611f4c565b6000610ad36108c383610e64565b604080516060810182528681523360208201529192508101600090526000828152600a60209081526040918290208351815590830151600180830180546001600160a01b039093166001600160a01b031984168117825594860151939490926001600160a81b0319161790600160a01b908490811115610b5557610b55611eea565b02179055509193505050505b919050565b60606008805461042390611f4c565b6000670de0b6b3a7640000610b88610544565b610b929084612006565b6104ba919061206b565b6000670de0b6b3a7640000610b886106bc565b60606007805461042390611f4c565b610bc6611234565b610bcf81611289565b50565b610bf360408051606081018252600080825260208201819052909182015290565b6000828152600a60209081526040918290208251606081018452815481526001808301546001600160a01b038116948301949094529093919291840191600160a01b900460ff1690811115610c4a57610c4a611eea565b6001811115610c5b57610c5b611eea565b90525092915050565b610c718383836001611332565b505050565b600080848152600a60205260409020600190810154600160a01b900460ff1690811115610ca557610ca5611eea565b03610cb457610c718383611407565b610c718383611477565b6001600160a01b038381166000908152600360209081526040808320938616835292905220546000198114610d365781811015610d2757604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016109ed565b610d3684848484036000611332565b50505050565b6001600160a01b038316610d6657604051634b637e8f60e11b8152600060048201526024016109ed565b6001600160a01b038216610d905760405163ec442f0560e01b8152600060048201526024016109ed565b610c718383836114f7565b6106b88260008084611621565b60606000610db58361169f565b60010190506000816001600160401b03811115610dd457610dd4611d39565b6040519080825280601f01601f191660200182016040528015610dfe576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610e0857509392505050565b8051600003610e5c5760405163fe936cb760e01b815260040160405180910390fd5b60a090910152565b60606000610e73610100611777565b9050610eac6040518060400160405280600c81526020016b31b7b232a637b1b0ba34b7b760a11b8152508261179890919063ffffffff16565b8251610eca906002811115610ec357610ec3611eea565b82906117b1565b6040805180820190915260088152676c616e677561676560c01b6020820152610ef4908290611798565b6040830151610f0b908015610ec357610ec3611eea565b604080518082019091526006815265736f7572636560d01b6020820152610f33908290611798565b6060830151610f43908290611798565b60a08301515115610fcf576040805180820190915260048152636172677360e01b6020820152610f74908290611798565b610f7d816117ea565b60005b8360a0015151811015610fc557610fbd8460a001518281518110610fa657610fa661203f565b60200260200101518361179890919063ffffffff16565b600101610f80565b50610fcf8161180e565b6080830151511561109357600083602001516002811115610ff257610ff2611eea565b036110105760405163a80d31f760e01b815260040160405180910390fd5b60408051808201909152600f81526e39b2b1b932ba39a637b1b0ba34b7b760891b6020820152611041908290611798565b61105a83602001516002811115610ec357610ec3611eea565b6040805180820190915260078152667365637265747360c81b6020820152611083908290611798565b608083015161109390829061182c565b60c083015151156111245760408051808201909152600981526862797465734172677360b81b60208201526110c9908290611798565b6110d2816117ea565b60005b8360c001515181101561111a576111128460c0015182815181106110fb576110fb61203f565b60200260200101518361182c90919063ffffffff16565b6001016110d5565b506111248161180e565b515192915050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663461d27628688600188886040518663ffffffff1660e01b815260040161118495949392919061207f565b6020604051808303816000875af11580156111a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c791906120c8565b60405190915081907f1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db890600090a295945050505050565b6001600160a01b03821661122857604051634b637e8f60e11b8152600060048201526024016109ed565b6106b8826000836114f7565b6000546001600160a01b031633146112875760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016109ed565b565b336001600160a01b038216036112e15760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016109ed565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6001600160a01b03841661135c5760405163e602df0560e01b8152600060048201526024016109ed565b6001600160a01b03831661138657604051634a1406b160e11b8152600060048201526024016109ed565b6001600160a01b0380851660009081526003602090815260408083209387168352929052208290558015610d3657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113f991815260200190565b60405180910390a350505050565b6000828152600a602052604090205461141f826120e1565b600981905561142d82611839565b111561144c5760405163c54e73af60e01b815260040160405180910390fd5b8015610c71576000838152600a6020526040902060010154610c71906001600160a01b031682611865565b6000611482826120e1565b905060008190036114b6576000838152600a602052604090208054600190910154610d36906001600160a01b031682611865565b6000838152600a60209081526040808320600101546001600160a01b03168352600b909152812080548392906114ed908490612105565b9091555050505050565b6001600160a01b0383166115225780600460008282546115179190612105565b909155506115949050565b6001600160a01b038316600090815260026020526040902054818110156115755760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016109ed565b6001600160a01b03841660009081526002602052604090209082900390555b6001600160a01b0382166115b0576004805482900390556115cf565b6001600160a01b03821660009081526002602052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161161491815260200190565b60405180910390a3505050565b8051600003611643576040516322ce3edd60e01b815260040160405180910390fd5b8383600281111561165657611656611eea565b9081600281111561166957611669611eea565b9052506040840182801561167f5761167f611eea565b9081801561168f5761168f611eea565b9052506060909301929092525050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106116de5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061170a576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061172857662386f26fc10000830492506010015b6305f5e1008310611740576305f5e100830492506008015b612710831061175457612710830492506004015b60648310611766576064830492506002015b600a83106104ba5760010192915050565b61177f611c6a565b805161178b908361189b565b5060006020820152919050565b6117a58260038351611912565b8151610c719082611a2b565b81516117be9060c2611a4c565b506106b882826040516020016117d691815260200190565b60405160208183030381529060405261182c565b6117f5816004611ab5565b6001816020018181516118089190612105565b90525050565b611819816007611ab5565b6001816020018181516118089190612118565b6117a58260028351611912565b60008061184583611acc565b9050606461185460c883612006565b61185e919061206b565b9392505050565b6001600160a01b03821661188f5760405163ec442f0560e01b8152600060048201526024016109ed565b6106b8600083836114f7565b6040805180820190915260608152600060208201526118bb60208361212b565b156118e3576118cb60208361212b565b6118d6906020612118565b6118e09083612105565b91505b60208084018390526040518085526000815290818401018181101561190757600080fd5b604052509192915050565b6017816001600160401b031611611938578251610d369060e0600585901b168317611a4c565b60ff816001600160401b031611611978578251611960906018611fe0600586901b1617611a4c565b508251610d36906001600160401b0383166001611afd565b61ffff816001600160401b0316116119b95782516119a1906019611fe0600586901b1617611a4c565b508251610d36906001600160401b0383166002611afd565b63ffffffff816001600160401b0316116119fc5782516119e490601a611fe0600586901b1617611a4c565b508251610d36906001600160401b0383166004611afd565b8251611a1390601b611fe0600586901b1617611a4c565b508251610d36906001600160401b0383166008611afd565b60408051808201909152606081526000602082015261185e83838451611b82565b6040805180820190915260608152600060208201528251516000611a71826001612105565b905084602001518210611a9257611a9285611a8d836002612006565b611c53565b8451602083820101858153508051821115611aab578181525b5093949350505050565b8151610c7190601f611fe0600585901b1617611a4c565b6000670de0b6b3a7640000611adf610544565b83611ae960045490565b611af39190612105565b610b929190612006565b6040805180820190915260608152600060208201528351516000611b218285612105565b90508560200151811115611b3e57611b3e86611a8d836002612006565b60006001611b4e86610100612223565b611b589190612118565b90508651828101878319825116178152508051831115611b76578281525b50959695505050505050565b6040805180820190915260608152600060208201528251821115611ba557600080fd5b8351516000611bb48483612105565b90508560200151811115611bd157611bd186611a8d836002612006565b855180518382016020019160009180851115611beb578482525b505050602086015b60208610611c2b5780518252611c0a602083612105565b9150611c17602082612105565b9050611c24602087612118565b9550611bf3565b51815160001960208890036101000a0190811690199190911617905250849150509392505050565b8151611c5f838361189b565b50610d368382611a2b565b6040518060400160405280611c92604051806040016040528060608152602001600081525090565b8152602001600081525090565b6000815180845260005b81811015611cc557602081850181015186830182015201611ca9565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061185e6020830184611c9f565b80356001600160a01b0381168114610b6157600080fd5b60008060408385031215611d2257600080fd5b611d2b83611cf8565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611d6057600080fd5b81356001600160401b0380821115611d7a57611d7a611d39565b604051601f8301601f19908116603f01168101908282118183101715611da257611da2611d39565b81604052838152866020858801011115611dbb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611df057600080fd5b8335925060208401356001600160401b0380821115611e0e57600080fd5b611e1a87838801611d4f565b93506040860135915080821115611e3057600080fd5b50611e3d86828701611d4f565b9150509250925092565b600080600060608486031215611e5c57600080fd5b611e6584611cf8565b9250611e7360208501611cf8565b9150604084013590509250925092565b600060208284031215611e9557600080fd5b61185e82611cf8565b600060208284031215611eb057600080fd5b5035919050565b60008060408385031215611eca57600080fd5b611ed383611cf8565b9150611ee160208401611cf8565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b815181526020808301516001600160a01b0316908201526040820151606082019060028110611f3f57634e487b7160e01b600052602160045260246000fd5b8060408401525092915050565b600181811c90821680611f6057607f821691505b602082108103611f8057634e487b7160e01b600052602260045260246000fd5b50919050565b805169ffffffffffffffffffff81168114610b6157600080fd5b600080600080600060a08688031215611fb857600080fd5b611fc186611f86565b9450602086015193506040860151925060608601519150611fe460808701611f86565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176104ba576104ba611ff0565b60006020828403121561202f57600080fd5b8151801515811461185e57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60008261207a5761207a612055565b500490565b6001600160401b038616815260a0602082015260006120a160a0830187611c9f565b61ffff9590951660408301525063ffffffff92909216606083015260809091015292915050565b6000602082840312156120da57600080fd5b5051919050565b80516020808301519190811015611f805760001960209190910360031b1b16919050565b808201808211156104ba576104ba611ff0565b818103818111156104ba576104ba611ff0565b60008261213a5761213a612055565b500690565b600181815b8085111561217a57816000190482111561216057612160611ff0565b8085161561216d57918102915b93841c9390800290612144565b509250929050565b600082612191575060016104ba565b8161219e575060006104ba565b81600181146121b457600281146121be576121da565b60019150506104ba565b60ff8411156121cf576121cf611ff0565b50506001821b6104ba565b5060208310610133831016604e8410600b84101617156121fd575081810a6104ba565b612207838361213f565b806000190482111561221b5761221b611ff0565b029392505050565b600061185e838361218256fea2646970667358221220aba3b14083f94a7fae9d16bbedc92e51f279753a87d8c64cab5924ab8ae8c07064736f6c63430008190033000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c20000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000026869662028736563726574732e616c706163614b6579203d3d202222207c7c20736563726574732e616c6170616361536563726574203d3d20222229207b0a20207468726f77206e6577204572726f722822416c7061636120415049206b657920616e6420736563726574206e6f74207365742e22293b0a7d0a0a636f6e737420616c7061636152657175657374203d2046756e6374696f6e732e6d616b654874747052657175657374287b0a202075726c3a202268747470733a2f2f70617065722d6170692e616c706163612e6d61726b6574732f76322f6163636f756e74222c0a2020686561646572733a207b0a202020206163636570743a20226170706c69636174696f6e2f6a736f6e222c0a2020202022415043412d4150492d4b45592d4944223a20736563726574732e616c706163614b65792c0a2020202022415043412d4150492d5345435245542d4b4559223a20736563726574732e616c706163615365637265742c0a20207d2c0a7d293b0a0a636f6e7374205b726573706f6e73655d203d2061776169742050726f6d6973652e616c6c285b616c70616361526571756573745d293b0a0a636f6e737420706f7274666f6c696f42616c616e6365203d20726573706f6e73652e646174612e706f7274666f6c696f5f76616c75653b0a636f6e736f6c652e6c6f672860416c7061636120506f7274666f6c696f2042616c616e63653a2024247b706f7274666f6c696f42616c616e63657d60293b0a0a72657475726e2046756e6374696f6e732e656e636f646555696e74323536284d6174682e726f756e6428706f7274666f6c696f42616c616e6365202a2031303029293b0a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001a182f2f205768617420646f657320746869732073637269707420646f3f0a2f2f20312e2053656c6c732054534c41206f6e20616c7061636120666f72205553440a2f2f20322e20427579732055534443202d3e2077697468205553440a2f2f20332e2053656e64732055534443202d3e20636f6e747261637420666f722077697468647261776c0a0a2f2f2052657475726e2030206f6e20756e7375636365737366756c2073656c6c0a0a636f6e73742041535345545f5449434b4552203d202254534c41223b0a636f6e73742043525950544f5f5449434b4552203d202255534443555344223b0a2f2f20544f444f0a636f6e7374205257415f434f4e5452414354203d2022307837333538443443444631633436386141303138656334316464443938623434383739613130393632223b0a636f6e737420534c4545505f54494d45203d20353030303b202f2f2035207365636f6e64730a0a6173796e632066756e6374696f6e206d61696e2829207b0a2020636f6e737420616d6f756e7454736c61203d20617267735b305d3b0a2020636f6e737420616d6f756e7455736463203d20617267735b315d3b0a20205f636865636b4b65797328293b0a0a20202f2a2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f0a20202020202020202020202020202020202020202020202020202053454c4c2054534c4120464f52205553440a202020202f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2a2f0a20206c65742073696465203d202273656c6c223b0a20206c6574205b636c69656e745f6f726465725f69642c206f726465725374617475732c20726573706f6e73655374617475735d203d20617761697420706c6163654f72646572280a2020202041535345545f5449434b45522c0a20202020616d6f756e7454736c612c0a20202020736964650a2020293b0a202069662028726573706f6e736553746174757320213d3d2032303029207b0a2020202072657475726e2046756e6374696f6e732e656e636f646555696e743235362830293b0a20207d0a2020696620286f7264657253746174757320213d3d202261636365707465642229207b0a2020202072657475726e2046756e6374696f6e732e656e636f646555696e743235362830293b0a20207d0a0a20206c65742066696c6c6564203d2061776169742077616974466f724f72646572546f46696c6c28636c69656e745f6f726465725f6964293b0a2020696620282166696c6c656429207b0a202020202f2f204061756469742c2069662074686973206661696c732e2e2e205468617427732070726f6261626c7920616e2069737375650a2020202061776169742063616e63656c4f7264657228636c69656e745f6f726465725f6964293b0a2020202072657475726e2046756e6374696f6e732e656e636f646555696e743235362830293b0a20207d0a0a20202f2a2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f0a20202020202020202020202020202020202020202020202020202042555920555344432057495448205553440a202020202f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2a2f0a202073696465203d2022627579223b0a20205b636c69656e745f6f726465725f69642c206f726465725374617475732c20726573706f6e73655374617475735d203d20617761697420706c6163654f72646572280a2020202043525950544f5f5449434b45522c0a20202020616d6f756e7454736c612c0a20202020736964650a2020293b0a202069662028726573706f6e736553746174757320213d3d2032303029207b0a2020202072657475726e2046756e6374696f6e732e656e636f646555696e743235362830293b0a20207d0a2020696620286f7264657253746174757320213d3d202261636365707465642229207b0a2020202072657475726e2046756e6374696f6e732e656e636f646555696e743235362830293b0a20207d0a202066696c6c6564203d2061776169742077616974466f724f72646572546f46696c6c28636c69656e745f6f726465725f6964293b0a2020696620282166696c6c656429207b0a202020202f2f204061756469742c2069662074686973206661696c732e2e2e205468617427732070726f6261626c7920616e2069737375650a2020202061776169742063616e63656c4f7264657228636c69656e745f6f726465725f6964293b0a2020202072657475726e2046756e6374696f6e732e656e636f646555696e743235362830293b0a20207d0a0a20202f2a2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f0a2020202020202020202020202020202020202020202020202053454e44205553444320544f20434f4e54524143540a202020202f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2a2f0a2020636f6e7374207472616e736665724964203d2061776169742073656e6455736463546f436f6e747261637428616d6f756e7455736463293b0a2020696620287472616e736665724964203d3d3d206e756c6c29207b0a2020202072657475726e2046756e6374696f6e732e656e636f646555696e743235362830293b0a20207d0a0a2020636f6e737420636f6d706c65746564203d2061776169742077616974466f7243727970746f5472616e73666572546f436f6d706c657465287472616e736665724964293b0a20206966202821636f6d706c6574656429207b0a2020202072657475726e2046756e6374696f6e732e656e636f646555696e743235362830293b0a20207d0a202072657475726e2046756e6374696f6e732e656e636f646555696e7432353628616d6f756e7455736463293b0a7d0a0a2f2f2072657475726e7320737472696e673a20636c69656e745f6f726465725f69642c20737472696e673a206f726465725374617475732c20696e743a20726573706f6e73655374617475730a6173796e632066756e6374696f6e20706c6163654f726465722873796d626f6c2c207174792c207369646529207b0a20202f2f20544f444f2c20736f6d657468696e672069732077726f6e672077697468207468697320726571756573742c206e65656420746f206669780a2020636f6e737420616c7061636153656c6c52657175657374203d2046756e6374696f6e732e6d616b654874747052657175657374287b0a202020206d6574686f643a2022504f5354222c0a2020202075726c3a202268747470733a2f2f70617065722d6170692e616c706163612e6d61726b6574732f76322f6f7264657273222c0a20202020686561646572733a207b0a2020202020206163636570743a20226170706c69636174696f6e2f6a736f6e222c0a20202020202022636f6e74656e742d74797065223a20226170706c69636174696f6e2f6a736f6e222c0a20202020202022415043412d4150492d4b45592d4944223a20736563726574732e616c706163614b65792c0a20202020202022415043412d4150492d5345435245542d4b4559223a20736563726574732e616c706163615365637265742c0a202020207d2c0a20202020646174613a207b0a202020202020736964653a20736964652c0a202020202020747970653a20226d61726b6574222c0a20202020202074696d655f696e5f666f7263653a2022677463222c0a20202020202073796d626f6c3a2073796d626f6c2c0a2020202020207174793a207174792c0a202020207d2c0a20207d293b0a0a2020636f6e7374205b726573706f6e73655d203d2061776169742050726f6d6973652e616c6c285b616c7061636153656c6c526571756573745d293b0a2020636f6e737420726573706f6e7365537461747573203d20726573706f6e73652e7374617475733b0a2020636f6e736f6c652e6c6f6728605c6e526573706f6e7365207374617475733a20247b726573706f6e73655374617475737d5c6e60293b0a2020636f6e736f6c652e6c6f6728726573706f6e7365293b0a2020636f6e736f6c652e6c6f6728605c6e60293b0a0a2020636f6e7374207b20636c69656e745f6f726465725f69642c207374617475733a206f72646572537461747573207d203d20726573706f6e73652e646174613b0a202072657475726e20636c69656e745f6f726465725f69642c206f726465725374617475732c20726573706f6e73655374617475733b0a7d0a0a2f2f2072657475726e7320696e743a20726573706f6e73655374617475730a6173796e632066756e6374696f6e2063616e63656c4f7264657228636c69656e745f6f726465725f696429207b0a2020636f6e737420616c7061636143616e63656c52657175657374203d2046756e6374696f6e732e6d616b654874747052657175657374287b0a202020206d6574686f643a202244454c455445222c0a2020202075726c3a206068747470733a2f2f70617065722d6170692e616c706163612e6d61726b6574732f76322f6f72646572732f247b636c69656e745f6f726465725f69647d602c0a20202020686561646572733a207b0a2020202020206163636570743a20226170706c69636174696f6e2f6a736f6e222c0a20202020202022415043412d4150492d4b45592d4944223a20736563726574732e616c706163614b65792c0a20202020202022415043412d4150492d5345435245542d4b4559223a20736563726574732e616c706163615365637265742c0a202020207d2c0a20207d293b0a0a2020636f6e7374205b726573706f6e73655d203d2061776169742050726f6d6973652e616c6c285b616c7061636143616e63656c526571756573745d293b0a0a2020636f6e737420726573706f6e7365537461747573203d20726573706f6e73652e7374617475733b0a202072657475726e20726573706f6e73655374617475733b0a7d0a0a2f2f204072657475726e7320626f6f6c0a6173796e632066756e6374696f6e2077616974466f724f72646572546f46696c6c28636c69656e745f6f726465725f696429207b0a20206c6574206e756d6265724f66536c65657073203d20303b0a2020636f6e7374206361704e756d6265724f66536c65657073203d2031303b0a20206c65742066696c6c6564203d2066616c73653b0a0a20207768696c6520286e756d6265724f66536c65657073203c206361704e756d6265724f66536c6565707329207b0a20202020636f6e737420616c706163614f7264657253746174757352657175657374203d2046756e6374696f6e732e6d616b654874747052657175657374287b0a2020202020206d6574686f643a2022474554222c0a20202020202075726c3a206068747470733a2f2f70617065722d6170692e616c706163612e6d61726b6574732f76322f6f72646572732f247b636c69656e745f6f726465725f69647d602c0a202020202020686561646572733a207b0a20202020202020206163636570743a20226170706c69636174696f6e2f6a736f6e222c0a202020202020202022415043412d4150492d4b45592d4944223a20736563726574732e616c706163614b65792c0a202020202020202022415043412d4150492d5345435245542d4b4559223a20736563726574732e616c706163615365637265742c0a2020202020207d2c0a202020207d293b0a0a20202020636f6e7374205b726573706f6e73655d203d2061776169742050726f6d6973652e616c6c285b616c706163614f72646572537461747573526571756573745d293b0a0a20202020636f6e737420726573706f6e7365537461747573203d20726573706f6e73652e7374617475733b0a20202020636f6e7374207b207374617475733a206f72646572537461747573207d203d20726573706f6e73652e646174613b0a2020202069662028726573706f6e736553746174757320213d3d2032303029207b0a20202020202072657475726e2066616c73653b0a202020207d0a20202020696620286f72646572537461747573203d3d3d202266696c6c65642229207b0a20202020202066696c6c6564203d20747275653b0a202020202020627265616b3b0a202020207d0a202020206e756d6265724f66536c656570732b2b3b0a20202020617761697420736c65657028534c4545505f54494d45293b0a20207d0a202072657475726e2066696c6c65643b0a7d0a0a2f2f2072657475726e7320737472696e673a207472616e7366657249640a6173796e632066756e6374696f6e2073656e6455736463546f436f6e74726163742875736463416d6f756e7429207b0a2020636f6e7374207472616e7366657252657175657374203d2046756e6374696f6e732e6d616b654874747052657175657374287b0a202020206d6574686f643a2022504f5354222c0a2020202075726c3a202268747470733a2f2f70617065722d6170692e616c706163612e6d61726b6574732f76322f77616c6c6574732f7472616e7366657273222c0a20202020686561646572733a207b0a2020202020206163636570743a20226170706c69636174696f6e2f6a736f6e222c0a20202020202022636f6e74656e742d74797065223a20226170706c69636174696f6e2f6a736f6e222c0a20202020202022415043412d4150492d4b45592d4944223a20736563726574732e616c706163614b65792c0a20202020202022415043412d4150492d5345435245542d4b4559223a20736563726574732e616c706163615365637265742c0a202020207d2c0a20202020646174613a207b0a202020202020616d6f756e743a2075736463416d6f756e742c0a202020202020616464726573733a205257415f434f4e54524143542c0a20202020202061737365743a2043525950544f5f5449434b45522c0a202020207d2c0a20207d293b0a0a2020636f6e7374205b726573706f6e73655d203d2061776169742050726f6d6973652e616c6c285b7472616e73666572526571756573745d293b0a202069662028726573706f6e73652e73746174757320213d3d2032303029207b0a2020202072657475726e206e756c6c3b0a20207d0a202072657475726e20726573706f6e73652e646174612e69643b0a7d0a0a6173796e632066756e6374696f6e2077616974466f7243727970746f5472616e73666572546f436f6d706c657465287472616e73666572496429207b0a20206c6574206e756d6265724f66536c65657073203d20303b0a2020636f6e7374206361704e756d6265724f66536c65657073203d203132303b202f2f20313230202a2035207365636f6e6473203d203130206d696e757465730a20206c657420636f6d706c65746564203d2066616c73653b0a0a20207768696c6520286e756d6265724f66536c65657073203c206361704e756d6265724f66536c6565707329207b0a20202020636f6e737420616c706163615472616e7366657253746174757352657175657374203d2046756e6374696f6e732e6d616b654874747052657175657374287b0a2020202020206d6574686f643a2022474554222c0a20202020202075726c3a206068747470733a2f2f70617065722d6170692e616c706163612e6d61726b6574732f76322f77616c6c6574732f7472616e73666572732f247b7472616e7366657249647d602c0a202020202020686561646572733a207b0a20202020202020206163636570743a20226170706c69636174696f6e2f6a736f6e222c0a202020202020202022415043412d4150492d4b45592d4944223a20736563726574732e616c706163614b65792c0a202020202020202022415043412d4150492d5345435245542d4b4559223a20736563726574732e616c706163615365637265742c0a2020202020207d2c0a202020207d293b0a0a20202020636f6e7374205b726573706f6e73655d203d2061776169742050726f6d6973652e616c6c285b616c706163615472616e73666572537461747573526571756573745d293b0a0a20202020636f6e737420726573706f6e7365537461747573203d20726573706f6e73652e7374617475733b0a202020202f2f204061756469742c20746865207472616e7366657220636f756c6420636f6d706c6574652c206275742074686520726573706f6e736520636f756c64206265203430300a20202020636f6e7374207b207374617475733a207472616e73666572537461747573207d203d20726573706f6e73652e646174613b0a2020202069662028726573706f6e736553746174757320213d3d2032303029207b0a20202020202072657475726e2066616c73653b0a202020207d0a20202020696620287472616e73666572537461747573203d3d3d2022636f6d706c657465642229207b0a202020202020636f6d706c65746564203d20747275653b0a202020202020627265616b3b0a202020207d0a202020206e756d6265724f66536c656570732b2b3b0a20202020617761697420736c65657028534c4545505f54494d45293b0a20207d0a202072657475726e20636f6d706c657465643b0a7d0a0a66756e6374696f6e205f636865636b4b6579732829207b0a202069662028736563726574732e616c706163614b6579203d3d202222207c7c20736563726574732e616c70616361536563726574203d3d3d20222229207b0a202020207468726f77204572726f7228226e65656420616c70616361206b65797322293b0a20207d0a7d0a0a66756e6374696f6e20736c656570286d7329207b0a202072657475726e206e65772050726f6d69736528287265736f6c766529203d3e2073657454696d656f7574287265736f6c76652c206d7329293b0a7d0a0a636f6e737420726573756c74203d206177616974206d61696e28293b0a72657475726e20726573756c743b0a0000000000000000",
        "nonce": "0xa",
        "chainId": "0x13882"
      },
      "additionalContracts": [],
      "isFixedGasLimit": false
    }
  ],
  "receipts": [
    {
      "status": "0x1",
      "cumulativeGasUsed": "0x727539",
      "logs": [
        {
          "address": "0x0000000000000000000000000000000000001010",
          "topics": [
            "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
            "0x0000000000000000000000000000000000000000000000000000000000001010",
            "0x000000000000000000000000db035c42e12ee11f1d47797954c25ee36c3dc77c",
            "0x000000000000000000000000915a2284d28bd93de7d6f31173b981204bb666e6"
          ],
          "data": "0x000000000000000000000000000000000000000000000000001c8bf9ffa4b400000000000000000000000000000000000000000000000000090192e3b9e122ce000000000000000000000000000000000000000000000161b00fdd25d1dccc9100000000000000000000000000000000000000000000000008e506e9ba3c6ece000000000000000000000000000000000000000000000161b02c691fd1818091",
          "blockHash": "0xc2b502cd9cb8cba3866956b6ac6282b5d9f9b29dd9e2ae360c775105ada670a7",
          "blockNumber": "0x6bfd70",
          "transactionHash": "0xc7a94bd7beaaecd477e307855fe46e65f5c618479a2f20aaeefa0bb9339fca99",
          "transactionIndex": "0x2",
          "logIndex": "0x7",
          "removed": false
        }
      ],
      "logsBloom": "0x
      "type": "0x2",
      "transactionHash": "0xc7a94bd7beaaecd477e307855fe46e65f5c618479a2f20aaeefa0bb9339fca99",
      "transactionIndex": "0x2",
      "blockHash": "0xc2b502cd9cb8cba3866956b6ac6282b5d9f9b29dd9e2ae360c775105ada670a7",
      "blockNumber": "0x6bfd70",
      "gasUsed": "0x6f761c",
      "effectiveGasPrice": "0x4190ab0f",
      "from": "0xdb035c42e12ee11f1d47797954c25ee36c3dc77c",
      "to": null,
      "contractAddress": "0x6b5335df55a1729ee5c34a74e33bcfa5b34bdc27"
    }
  ],
  "libraries": [],
  "pending": [],
  "returns": {},
  "timestamp": 1715782242,
  "chain": 80002,
  "commit": "65aa332"
}